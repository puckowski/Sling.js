new function(t){let e={},n=new Map,r=[],o=new Map;Sling=s=function(){return[...arguments]},s.version=.3;const c=(t,e)=>{const n=[];t.forEach((t,r)=>{n.push(i(t,e[r]))});const r=[];for(const n of e.slice(t.length))r.push(t=>(t.appendChild(s.render(n)),t));return t=>{for(const[e,r]of((t,e)=>{const n=[];for(let r=0;r<Math.max(t.length,e.length);r++)n.push([t[r],e[r]]);return n})(n,t.childNodes))e(r);for(const e of r)e(t);return t}},i=(t,e)=>{if(void 0===e)return t=>{t.remove()};if("string"==typeof t||"string"==typeof e)return t!==e?t=>{const n=s.render(e);return t.replaceWith(n),n}:t=>void 0;if(t.tagName!==e.tagName)return t=>{const n=s.render(e);return t.replaceWith(n),n};const n=((t,e,n,r)=>{if(n===r)return t=>{};const o=[];let s;for(const[t,n]of Object.entries(e))s=typeof n,0===t.indexOf("on")&&"function"===s?o.push(e=>(e[t]=n,e)):o.push(e=>(e.setAttribute(t,n),e));for(const n in t)n in e||o.push(t=>(t.removeAttribute(n),t));return t=>{for(const e of o)e(t)}})(t.attrs,e.attrs,t.attrsStr,e.attrsStr),r=c(t.children,e.children);return t=>(n(t),r(t),t)};s.setState=t=>{e={...t}},s.getState=()=>e,s.textNode=t=>String(t),s.markup=(t,{attrs:e={},children:n=[]}={})=>{let r="";for(const[t,n]of Object.entries(e))r+=t+n;return{tagName:t,attrs:e,children:n,attrsStr:r}},s.render=t=>"string"==typeof t?document.createTextNode(t):(({tagName:t,attrs:e,children:n})=>{const r=document.createElement(t);let o;for(const[t,n]of Object.entries(e))o=typeof n,0===t.indexOf("on")&&"function"===o?r[t]=n:r.setAttribute(t,n);for(const t of n){const e=s.render(t);r.appendChild(e)}return r})(t),s.mount=(t,e)=>(t.replaceWith(e),e),s.mountById=(t,e)=>{let n=document.getElementById(t);return s.mount(n,e)},s.update=(t,e,n)=>{const r=n.view.bind(n)();t=i(e,r)(t),e=r},s.autoUpdate=(t,e,n,r=this.FPS_TARGET_MILLIS_MAX)=>{const s=n.view.bind(n)(),c=i(e,s);t=c(t),e=s;const u=setInterval(()=>{const r=n.view.bind(n)(),o=i(e,r);t=o(t),e=r},r);o.set(t,u)},s.route=function(){2===arguments.length?n.set(new RegExp("^"+arguments[0].replace(/:[^\/]+/g,"([^\\/]+)")+"$"),arguments[1]):n.forEach((e,n)=>{if(n.test(arguments[0])){t.location.hash=arguments[0];let n=t.location.href.split("#")[1];r=n.split("/");for(const[t,n]of o)(t==e.root||t.contains(e.root))&&(clearInterval(n),o.delete(t));const c=s.render(e.component.view());s.mount(e.root,c)}})},s.routeById=function(){arguments[1].root=document.getElementById(arguments[1].root),s.route(arguments[0],arguments[1])},s.getRouteSegments=function(){return r}}(this);